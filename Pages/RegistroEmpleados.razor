@page "/registroempleados"
@page "/registroempleados/{EmpleadoId}"
@using BlzorEmpleados.Data;
@using System.Net.Http;
@using System.Net.Http.Json;
@inject ToastService toastService;

@inject HttpClient Http
@inject NavigationManager navigationManager

<h3>RegistroEmpleados</h3>

<EditForm Model="Empleado" OnValidSubmit="Guardar">
    <div class="container-fluid">
        <div class="form-control">
            <div class="form-group">
                <label for="ProductoIdNumber">Producto ID: </label>
                <div class="input-group">
                    <InputNumber id="EmpleadoIdNumber" @bind-Value="Empleado.EmpleadoId" class="form-control" />
                    <button type="button" class="btn btn-primary" @onclick="Buscar"> Buscar</button>
                </div>
            </div>
            <div class="form-group">
                <label for="NombreText">Nombre</label>
                <InputText id="NombreText" @bind-Value="Empleado.Nombre" class="form-control" />
            </div>
            <div class="form-group">
                <label for="ApellidoText">Nombre</label>
                <InputText id="ApellidoText" @bind-Value="Empleado.Apellido" class="form-control" />
            </div>
            <div class="form-group">
                <label for="TelefonoText">Nombre</label>
                <InputText id="TelefonoText" @bind-Value="Empleado.Telefono" class="form-control" />
            </div>
            <div class="form-group">
                <label for="Estatus">Nombre</label>
                <InputText id="ApellidoText" @bind-Value="Empleado.Apellido" class="form-control" />
            </div>
            <div class="form-group">
                <InputSelect @bind-Value="estatusSeleccionado" @onclick="agregarEstatus" class="form-control">

                    @foreach (var estado in ListaEstatus)
                    {
                        <option value="@estado.EstatusId ">@estado.Descripcion</option>
                    }


                </InputSelect>
            </div>
            <div class="form-group mt-3">
                <button class="btn btn-primary" @onclick="Nuevo" type="button">Nuevo</button>
                <button class="btn btn-success" type="submit">Guardar</button>
                <button class="btn btn-danger" @onclick="Eliminar" type="button">Eliminar</button>

            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int EmpleadoId { get; set; }
    public string UrlEmpleados = "/api/Empleados";
    public string UrlEstatus = "/api/Estatus";
    string estatusSeleccionado = "0";
    public List<Estatus> ListaEstatus = new List<Estatus>();
    Empleados Empleado = new Empleados();
    Estatus status = new Estatus();
    EmpleadosResponse Er = new EmpleadosResponse();
    EstatusResponse EstatusR = new EstatusResponse();
    public async Task Limpiar()
    {
        Empleado = new Empleados();
    }
    public async Task Nuevo()
    {
        await Limpiar();
    }
    public async Task Guardar()
    {
        if (EmpleadoId != 0)
        {
            var response = await Http.PutAsJsonAsync<Empleados>(UrlEmpleados, Empleado);
            Er = response.Content.ReadFromJsonAsync<EmpleadosResponse>().Result;
        }
        else
        {
            var response = await Http.PostAsJsonAsync<Empleados>(UrlEmpleados, Empleado);
            Er = response.Content.ReadFromJsonAsync<EmpleadosResponse>().Result;
        }
    }
    public async Task Eliminar()
    {
        var response = await Http.DeleteAsync(UrlEmpleados + "/" + EmpleadoId);
        Er= response.Content.ReadFromJsonAsync<EmpleadosResponse>().Result;
        await Limpiar();
    }
    public async Task Buscar()
    {
        Empleado = await Http.GetFromJsonAsync<Empleados>(UrlEmpleados + "/" + Convert.ToInt32(EmpleadoId));
    }
    private async Task agregarEstatus()
    {
        try
        {
            var estatus = await Http.GetFromJsonAsync<Estatus>(UrlEstatus + "/" + Convert.ToInt32(estatusSeleccionado));
            Empleado.EstatusId = estatus.EstatusId;
            Empleado.EstatusDescripcion = estatus.Descripcion;
        }
        catch (Exception)
        {
            throw;
        }


    }

    protected override async Task OnInitializedAsync()
    {
        EstatusR = await Http.GetFromJsonAsync<EstatusResponse>(UrlEmpleados);
        ListaEstatus = EstatusR.Lista;
        
    }
}
